{"version":3,"file":"main.js","mappings":"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","sources":["./env.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard-module/dashboard-module.module.ts","./src/app/dashboard-module/dashboard-routing.module.ts","./src/app/dashboard-module/dashboard.parent.ts","./src/app/dashboard-module/dashboard.parent.html","./src/app/dashboard-module/login-component/login-component.component.ts","./src/app/dashboard-module/login-component/login-component.component.html","./src/app/httpconfig.interceptor.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["export const env = {\n    firebase: {\n      apiKey: \"AIzaSyDUljp8vm_abh5foyi_wpM2DtlTaPxA7W0\",\n      authDomain: \"selfi-e3c3d.firebaseapp.com\",\n      projectId: \"selfi-e3c3d\",\n      storageBucket: \"selfi-e3c3d.appspot.com\",\n      messagingSenderId: \"174612138830\",\n      appId: \"1:174612138830:web:3cca8883a5a2b0378bac1f\",\n      measurementId: \"G-GWYJ4659XV\",\n    },\n    vapidKey: \"\",\n    firebaseprod: {\n      apiKey: \"AIzaSyDUljp8vm_abh5foyi_wpM2DtlTaPxA7W0\",\n      authDomain: \"selfi-e3c3d.firebaseapp.com\",\n      projectId: \"selfi-e3c3d\",\n      storageBucket: \"selfi-e3c3d.appspot.com\",\n      messagingSenderId: \"174612138830\",\n      appId: \"1:174612138830:web:3cca8883a5a2b0378bac1f\",\n      measurementId: \"G-GWYJ4659XV\",\n    },\n  };","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from \"./auth.guard\";\n\nconst routes: Routes = [\n  // { path: \"login\", component: LoginComponent },\n  { path: \"\", redirectTo: \"dashboard\", pathMatch: \"full\" },\n  // {\n  //   path: \"login\",\n  //   loadChildren: () => import(\"src/app/dashboard-module/dashboard.module\").then((m) => m.DashboardModule),\n  // },\n  {\n    // canActivate: [AuthGuard],\n    path: \"dashboard\",\n    // loadChildren: () => import(\"src/app/view/view.module\").then((m) => m.ViewModule),\n    loadChildren: () => import(\"src/app/dashboard-module/dashboard-module.module\").then((m) => m.DashboardModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    initialNavigation: 'enabledBlocking'\n})],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'selfie-project';\n}\n","<router-outlet></router-outlet>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { setPersistence as AUTH_SETTINGS } from \"@angular/fire/auth\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { provideFirebaseApp, getApp, initializeApp } from \"@angular/fire/app\";\nimport { provideAuth, getAuth, initializeAuth } from \"@angular/fire/auth\";\nimport { getStorage, provideStorage } from \"@angular/fire/storage\";\nimport { getFirestore, provideFirestore } from \"@angular/fire/firestore\";\nimport { env } from 'env';\nimport { ServiceWorkerModule } from \"@angular/service-worker\";\nimport { environment } from 'src/environments/environment';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpConfigInterceptor } from './httpconfig.interceptor';\nimport { useDeviceLanguage as USE_DEVICE_LANGUAGE } from \"@angular/fire/auth\";\nimport { DashboardModule } from './dashboard-module/dashboard-module.module';\n// import { LibraryModule } from './library/library.module';\n\n@NgModule({\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    DashboardModule,\n    // LibraryModule,\n    provideFirebaseApp(() => initializeApp(env.firebase)),\n    provideAuth(() => getAuth()),\n    provideFirestore(() => getFirestore()),\n    provideStorage(() => getStorage()),\n    ServiceWorkerModule.register(\"ngsw-worker.js\", {\n      enabled: environment.production,\n      registrationStrategy: \"registerWhenStable:30000\",\n    }),\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpConfigInterceptor,\n      multi: true,\n    },\n    {\n      provide: AUTH_SETTINGS,\n      useValue: { appVerificationDisabledForTesting: true },\n    },\n    { provide: USE_DEVICE_LANGUAGE, useValue: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login-component/login-component.component';\nimport { DashboardParent } from './dashboard.parent';\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n// import { LibraryModule } from '../library/library.module';\n// import { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  declarations: [\n    LoginComponent,DashboardParent\n  ],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    ReactiveFormsModule,\n    // LibraryModule\n    // SharedModule\n  ]\n})\nexport class DashboardModule { }\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { LoginComponent } from \"./login-component/login-component.component\";\nimport { DashboardParent } from \"./dashboard.parent\";\n\nconst routes: Routes = [\n    // { path: \"\", redirectTo: \"login\", pathMatch: \"full\" },\n    {\n      path: \"\",\n      component: DashboardParent,\n      children: [\n        {\n          path: \"login\",\n          component: LoginComponent,\n        },\n      ],\n    },\n  ];\n  @NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n  })\n\n  export class DashboardRoutingModule {}","import { OnInit, Component, NgZone, ElementRef } from \"@angular/core\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.parent.html\",\n  styleUrls: [\"./dashboard.parent.scss\"],\n})\nexport class DashboardParent implements OnInit {\n\n  ngOnInit(): void {}\n}","<div class=\"p-2\">\n  <a href=\"login\">Dashboard hi</a>\n  <router-outlet></router-outlet>\n</div>","import { OnInit, NgZone, ElementRef, ViewEncapsulation, Inject, PLATFORM_ID } from \"@angular/core\";\nimport { Validators, FormGroup, FormControl, FormBuilder } from \"@angular/forms\";\nimport { LoginService } from \"./login.service\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { debounceTime, tap, switchMap, finalize, distinctUntilChanged } from \"rxjs/operators\";\nimport { ViewChild } from \"@angular/core\";\nimport { getAuth, RecaptchaVerifier } from \"@angular/fire/auth\";\nimport { ApplicationRef, Component, Optional } from \"@angular/core\";\nimport { signInWithPhoneNumber, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { deepCopy } from \"@angular-devkit/core/src/utils/object\";\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login-component.component.html\",\n  styleUrls: [\"./login-component.component.scss\"],\n  encapsulation: ViewEncapsulation.None,\n\n})\nexport class LoginComponent{\n  signInCreds: FormGroup;\n  is_browser = false\n  signInemailCreds: FormGroup;\n  otpCreds: FormGroup;\n  countryList: any = [];\n  inError: any;\n  apiLoad: any;\n  phonNumber: any;\n  formSubmited: any;\n  verificationId: any;\n  showTemplate: any;\n  otpformSubmited: any;\n  emailFormSubmited: any = false;\n  forgotPasswordSent = \"\";\n  OTPError: any;\n  resend: any;\n  country: any;\n  // @ViewChild(\"otp\", { static: false }) otp: any;\n  countrySearch: FormControl = new FormControl();\n  constructor(\n    public fb: FormBuilder,\n  //   public loginService: LoginService,\n  //   public router: Router,\n  //   public _ngZone: NgZone,\n  //   public route: ActivatedRoute,\n  //   // public helperService: HelperService\n  ) {\n    this.showTemplate = 1;\n    this.signInCreds = this.fb.group({\n      phonno: new FormControl(\"\", [Validators.required]),\n      country: new FormControl(null, [Validators.required]),\n    });\n    this.signInemailCreds = this.fb.group({\n      email: new FormControl(null, [\n        Validators.email,\n        Validators.pattern(\"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+.[A-Za-z]{2,4}$\"),\n      ]),\n      password: new FormControl(null, [Validators.required]),\n    });\n    this.otpCreds = this.fb.group({\n      otp: new FormControl(\"\", [Validators.required, Validators.minLength(6)]),\n    });\n    // this.getServerResponse(\"\");\n    // this.countrySearch.valueChanges.pipe(debounceTime(500), distinctUntilChanged()).subscribe((data) => {\n    //   this.getServerResponse(data);\n    // });\n  //   this.otpCreds.get('otp')?.valueChanges.subscribe(res=>{\n  //     if((\"\"+res).length>5){\n  //       this.otpConform();\n      }\n\n  //   })\n  // }\n  // selectedOption($event: any) {\n  //   this.country = $event.value;\n  //   this.countrySearch.setValue(\"\");\n  //   this.signInCreds.get(\"country\")?.setValue(this.country);\n  // }\n  // getServerResponse(event: any) {\n  //   this.loginService.countryListAPI(this.helperService.getQueryparams(\"1\", event, \"\", \"\")).subscribe(\n  //     (result: any) => {\n  //       this.countryList = result;\n  //       const conty = this.countryList.find((x: any) => x.code === \"IN\");\n  //       if (conty) {\n  //         this.signInCreds.get(\"country\")?.setValue(conty);\n  //         this.country = conty;\n  //       }\n  //     },\n  //     (error: any) => {}\n  //   );\n  // }\n  // recaptchaVerifierset() {\n  //   setTimeout(() => {\n  //     try {\n        \n  //       const authTemp = getAuth();\n  //       this.loginService.windowRef['recaptchaVerifier'] = new RecaptchaVerifier(\n  //         \"recaptcha-container\",\n  //         {\n  //           size: \"invisible\",\n  //           \"expired-callback\": () => {},\n  //           callback: (response: any) => {},\n  //         },\n  //         authTemp\n  //       );\n  //       this.loginService?.windowRef?.recaptchaVerifier.render();\n  //     } catch (e) {\n  //       setTimeout(() => {\n  //         this.recaptchaVerifierset();\n  //       }, 1000);\n  //     }\n  //   }, 100);\n  // }\n  // selectEvent(item: any) {\n  //   this.signInCreds.get(\"country\")?.setValue(item);\n  // }\n  // emailForgotPassword() {\n  //   const data = this.signInemailCreds.value;\n  //   this.apiLoad = true;\n  //   this.loginService.emailWithForgotPassword(data?.email).subscribe(\n  //     (signInres: any) => {\n  //       this.forgotPasswordSent = \"\" + deepCopy(data?.email);\n  //       this.signInemailCreds.reset();\n  //       this.apiLoad = false;\n  //     },\n  //     (error: any) => {\n  //       this.apiLoad = false;\n  //       if (error.code == \"auth/unauthorized-continue-uri\") {\n  //         this.inError =\n  //           \"The domain of the continue URL is not whitelisted. Whitelist the domain in the Firebase console.\";\n  //       } else if (error.code == \"auth/invalid-continue-uri\") {\n  //         this.inError = \"The continue URL provided in the request is invalid.\";\n  //       } else if (error.code == \"auth/missing-ios-bundle-id\") {\n  //         this.inError = \"An iOS Bundle ID must be provided if an App Store ID is provided.\";\n  //       } else if (error.code == \"auth/missing-continue-uri\") {\n  //         this.inError = \"A continue URL must be provided in the request.\";\n  //       } else if (error.code == \"auth/missing-android-pkg-name\") {\n  //         this.inError = \"An Android package name must be provided if the Android app is required to be installed.\";\n  //       } else if (error.code == \"auth/user-disabled\") {\n  //         this.inError = \"The user corresponding to the given email has been disabled.\";\n  //       } else if (error.code == \"auth/wrong-password\") {\n  //         this.inError =\n  //           \"Password is invalid for the given email, or the account corresponding to the email does not have a password set.\";\n  //       } else if (error.code == \"auth/invalid-email\") {\n  //         this.inError = \"Email address is not valid.\";\n  //       } else if (error.code == \"auth/user-not-found\") {\n  //         this.inError = \"There is no user corresponding to the given email.\";\n  //       } else {\n  //         this.inError = \"Error: \" + error.code + \" \" + error.message;\n  //       }\n  //       setTimeout(() => {\n  //         this.inError = null;\n  //       }, 6000);\n  //       console.error(\"error\", error);\n  //     }\n  //   );\n  // }\n  // formloginEmailCreds() {\n  //   this.emailFormSubmited = true;\n  //   const data = this.signInemailCreds.value;\n  //   if (this.signInemailCreds.invalid) {\n  //     return;\n  //   }\n  //   this.apiLoad = true;\n  //   const authTemp = getAuth();\n  //   signInWithEmailAndPassword(authTemp, data?.email, data?.password)\n  //     .then((result: any) => {\n  //       const user = result.user;\n  //       this.loginService.signIn(user, \"IN\").subscribe(\n  //         (signInres) => {\n  //           this.getUserDetail();\n  //         },\n  //         (error) => {\n  //           setTimeout(() => {\n  //             console.error(\"error\", error);\n  //             this.apiLoad = false;\n  //             this.inError = \"Error: \" + error?.error?.detail[0];\n  //             setTimeout(() => {\n  //               this.OTPError = null;\n  //               this.inError = null;\n                // localStorage.clear();\n                // window.location.reload();\n  //             }, 9000);\n  //           }, 100);\n  //         }\n  //       );\n  //     })\n  //     .catch((error) => {\n  //       console.error(\"error\", error.code);\n  //       if (error.code == \"auth/user-disabled\") {\n  //         this.inError = \"The user corresponding to the given email has been disabled.\";\n  //       } else if (error.code == \"auth/wrong-password\") {\n  //         this.inError =\n  //           \"Password is invalid for the given email, or the account corresponding to the email does not have a password set.\";\n  //       } else if (error.code == \"auth/invalid-email\") {\n  //         this.inError = \"Email address is not valid.\";\n  //       } else if (error.code == \"auth/user-not-found\") {\n  //         this.inError = \"There is no user corresponding to the given email.\";\n  //       } else {\n  //         this.inError = error;\n  //       }\n  //       this.apiLoad = false;\n  //       setTimeout(() => {\n  //         this.inError = null;\n  //       }, 6000);\n  //     });\n  // }\n  // formloginPhoneCredsCreds() {\n  //   this.formSubmited = true;\n  //   if (this.signInCreds.invalid) {\n  //     return;\n  //   }\n  //   this.apiLoad = true;\n  //   const data = this.signInCreds.value;\n  //   const appVerifier = this.loginService.windowRef['recaptchaVerifier'];\n  //   this.phonNumber = data.country.dial_code + \"\" + data.phonno;\n  //   const authTemp = getAuth();\n  //   signInWithPhoneNumber(authTemp, this.phonNumber, appVerifier)\n  //     .then((confirmationResult) => {\n  //       this.showTemplate = 2;\n  //       setTimeout(() => {\n  //         try {\n  //           const myTextBox = document.getElementById(\"otptype\");\n  //           myTextBox?.focus();\n  //         } catch (e) {\n  //           console.error(\"e\", e);\n  //         }\n  //       }, 1000);\n  //       this.resend = 60;\n  //       const interval = setInterval(() => {\n  //         this.resend--;\n  //         if (!this.resend) {\n  //           clearInterval(interval);\n  //         }\n  //       }, 1000);\n  //       this.loginService.windowRef['confirmationResult']  = confirmationResult;\n \n  //       this.apiLoad = false;\n  //       this.verificationId = confirmationResult.verificationId;\n  //     })\n  //     .catch((error) => {\n  //       this.apiLoad = false;\n  //       this.inError = error;\n  //       setTimeout(() => {\n  //         this.inError = null;\n  //       }, 3000);\n  //     });\n  // }\n  // getUserDetail() {\n  //   setTimeout(() => {\n  //     this._ngZone.run(() => {\n  //       this.router.navigate([\"\"]);\n  //       this.showTemplate = 3;\n  //       this.apiLoad = false;\n        //   this.loginService.getUserDetail().subscribe(\n        //     (signInres: any) => {\n        //       this.router.navigate([\"\"]);\n        //       this.showTemplate = 3;\n        //       this.apiLoad = false;\n        //     },\n        //     (error) => {\n        //       this.apiLoad = false;\n        //       this.OTPError = \"Error: \" + error?.error?.detail;\n        //       // setTimeout(() => {\n        //       //   this.OTPError = null;\n        //       //   localStorage.clear();\n        //       //   window.location.reload();\n        //       // }, 6000);\n        //     }\n        //   );\n//       });\n//     }, 50);\n//   }\n//   otpConform() {\n//     this.otpformSubmited = true;\n//     if (this.otpCreds.invalid) {\n//       return;\n//     }\n//     this.formSubmited = false;\n//     this.apiLoad = true;\n//     const data = this.otpCreds.value;\n//     this.loginService.windowRef['confirmationResult']\n//       .confirm(\"\" + this.otp.nativeElement.value)\n//       .then((result: any) => {\n//         const user = result.user;\n//         this.loginService.signIn(user, \"IN\").subscribe(\n//           (signInres) => {\n//             this.getUserDetail();\n//           },\n//           (error) => {\n//             setTimeout(() => {\n//               this.apiLoad = false;\n//               this.OTPError = \"Error: \" + error?.error?.detail;\n//               setTimeout(() => {\n//                 this.OTPError = null;\n//                 localStorage.clear();\n//                 window.location.reload();\n//               }, 6000);\n//             }, 100);\n//           }\n//         );\n//       })\n//       .catch((error: any) => {\n//         this.inError = \"Error during Signup: \" + error.code + \" \" + error.message;\n//         setTimeout(() => {\n//           this.inError = null;\n//         }, 6000);\n//         this.apiLoad = false;\n//       });\n//   }\n//   resendOtp() {\n//     this.showTemplate = 1;\n//     this.formSubmited = false;\n//     this.signInCreds.get(\"country\")?.setValue(this.countryList[0]);\n//     this.loginService.windowRef['recaptchaVerifier'].render().then(function (widgetId: any) {});\n//   }\n//   ngOnInit(): void {\n//     this.recaptchaVerifierset();\n//   }\n}\n","<main id=\"content\" role=\"main\" class=\"flex-grow-1\">\n    <!-- Form -->\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div\n          class=\"col-lg-5 col-xl-4 d-none d-lg-flex justify-content-center align-items-center min-vh-lg-100 position-relative  \"\n          style=\"background-color: #FFFCFB;\"\n        >\n          <div class=\"flex-grow-1 p-5\">\n            <!-- Blockquote -->\n            <figure class=\"text-center\">\n              <div class=\"mb-4 mt-8 device-mobile mx-auto\">\n                <a href=\"./\" aria-label=\"ibeLogo\">\n                  <img class=\"navbar-brand-logo\" src=\"./assets/logo.svg\" alt=\"ibe Logo\" />\n                </a>\n                 \n              </div>\n            </figure>\n            <figure class=\"text-center\">  <img  src=\"./assets/svg/welcome_screen.svg\" alt=\"ibe Logo\" />\n            </figure>\n           \n  \n  \n            <!-- End Blockquote -->\n            <!-- Clients -->\n            <div class=\"position-absolute start-0 end-0 bottom-0 text-center p-5\">\n              <div class=\"row justify-content-center\">\n                <div class=\"col-sm-auto\">\n                  <!-- <ul class=\"list-inline mb-0\">\n                    <li class=\"list-inline-item\">\n                      <a class=\"btn btn-soft-light btn-xs btn-icon\" href=\"http://www.facebook.com/ibreastexam\">\n                        <i class=\"bi-facebook\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a class=\"btn btn-soft-light btn-xs btn-icon\" href=\"https://twitter.com/UELifeSciences\">\n                        <i class=\"bi-twitter\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a class=\"btn btn-soft-light btn-xs btn-icon\" href=\"https://www.instagram.com/iBreastExam\">\n                        <i class=\"bi-instagram\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a class=\"btn btn-soft-light btn-xs btn-icon\" href=\"https://www.linkedin.com/company/1249161\">\n                        <i class=\"bi bi-linkedin\"></i>\n                      </a>\n                    </li>\n                  </ul> -->\n                </div>\n              </div>\n              <!-- End Row -->\n            </div>\n            <!-- End Clients -->\n          </div>\n        </div>\n        <!-- End Col -->\n        <div class=\"col-lg-7 col-xl-8 d-flex justify-content-center align-items-center min-vh-100\">\n          <div *ngIf=\"showTemplate == 1\" class=\"flex-grow-1 mx-auto\" style=\"max-width: 32rem\">\n            <!-- Heading -->\n            <div class=\"text-center mb-5 mb-md-7\">\n              <h1 class=\"h2\">Welcome back</h1>\n            </div>\n            <!-- End Heading -->\n            <!-- Form -->\n            <form\n              class=\"js-validate needs-validation\"\n              novalidate\n              autocomplete=\"off\"\n             \n              [formGroup]=\"signInCreds\"\n            >\n            <!-- (ngSubmit)=\"formloginPhoneCredsCreds()\" -->\n              <div class=\"row\">\n                <div class=\"col-5\">\n                  <div class=\"mb-4\">\n                    <div class=\"js-form-message form-group\">\n                      <mat-form-field style=\"width: 100%\" class=\"width\">\n                        <mat-label>Select Country</mat-label>\n                        <mat-select [(value)]=\"country\"  disableOptionCentering>\n                            <!-- (selectionChange)=\"selectedOption($event)\" -->\n                          <div class=\"p-2\">\n                            <mat-label>Search Country</mat-label>\n                            <input\n                              class=\"border p-2\"\n                              matInput\n                              placeholder=\"Search Country\"\n                              aria-label=\"Country\"\n                              [formControl]=\"countrySearch\"\n                            />\n                          </div>\n                          <mat-select-trigger> {{ country?.name }} | {{ country?.dial_code }} </mat-select-trigger>\n                          <mat-option *ngFor=\"let food of countryList\" [value]=\"food\">\n                            {{ food?.name }} | {{ food?.dial_code }}\n                          </mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-lg-6\">\n                  <mat-form-field class=\"example-form-field\">\n                    <mat-label>Phone Number</mat-label>\n                    <input matInput type=\"text\" formControlName=\"phonno\" />\n                  </mat-form-field>\n                </div>\n                <div class=\"col-lg-6\">\n                  <div *ngIf=\"inError\">{{ inError }}</div>\n                </div>\n              </div>\n  \n              <!-- End Form -->\n              <div class=\"d-grid mb-3\">\n                <button type=\"submit\" class=\"btn btn-primary btn-lg\" [disabled]=\"!signInCreds.valid || apiLoad\">\n                  Log in\n                  <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" *ngIf=\"apiLoad\"></span>\n                </button>\n              </div>\n              <div class=\"text-center\">\n                <p>\n                  <a style=\"cursor: pointer\" class=\"link\" (click)=\"signInemailCreds.reset(); showTemplate = 3\"\n                    >Sign in with email</a\n                  >\n                </p>\n              </div>\n            </form>\n            <!-- End Form -->\n          </div>\n          <div *ngIf=\"showTemplate == 2\" class=\"flex-grow-1 mx-auto\" style=\"max-width: 28rem\">\n            <!-- Heading -->\n            <div class=\"text-center mb-5 mb-md-7\">\n              <h1 class=\"h2\">Mobile code verification</h1>\n            </div>\n            <!-- End Heading -->\n            <!-- Form -->\n            <form\n              class=\"js-validate needs-validation\"\n              novalidate\n              autocomplete=\"off\"\n             \n              [formGroup]=\"otpCreds\"\n            >\n            <!-- (ngSubmit)=\"otpConform()\" -->\n              <!-- Form -->\n              <div class=\"mb-4\">\n                <div class=\"js-form-message form-group\">\n                  <label class=\"input-label\" for=\"signinSrEmail\">\n                    We have sent you an SMS with a code to {{ phonNumber }}\n                  </label>\n                  <input\n                    #otp\n                    type=\"number\"\n                    min=\"0\"\n                    id=\"otptype\"\n                    class=\"form-control form-control-lg\"\n                    name=\"otp\"\n                    formControlName=\"otp\"\n                    placeholder=\"Enter mobile code\"\n                    [ngClass]=\"{\n                      'is-invalid': otpCreds.get('otp')?.errors && otpformSubmited\n                    }\"\n                  />\n                  <!-- numeric -->\n                  <div *ngIf=\"otpCreds.get('otp')?.errors && otpformSubmited\" class=\"invalid-feedback\">\n                    Please enter a valid otp.\n                  </div>\n                  <div *ngIf=\"OTPError\">{{ OTPError }}</div>\n                  <div *ngIf=\"resend\">Resend code in {{ resend }} seconds</div>\n                  <button type=\"button\" class=\"btn btn-link\" *ngIf=\"!resend\">\n                    Resend code {{ otp.value }}\n                  </button>\n                  <!-- (click)=\"resendOtp()\" -->\n                </div>\n                <div *ngIf=\"inError\">{{ inError }}</div>\n              </div>\n              <!-- End Form -->\n              <div class=\"d-grid mb-3\">\n                <button type=\"submit\" class=\"btn btn-primary btn-lg\" [disabled]=\"otp.value.length != 6 || apiLoad\">\n                  Verify\n                  <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" *ngIf=\"apiLoad\"></span>\n                </button>\n              </div>\n            </form>\n            <!-- End Form -->\n          </div>\n          <div *ngIf=\"showTemplate == 3\" class=\"flex-grow-1 mx-auto\" style=\"max-width: 28rem\">\n            <!-- Heading -->\n            <div class=\"text-center mb-5 mb-md-7\">\n              <h1 class=\"h2\">Welcome back</h1>\n            </div>\n            <!-- End Heading -->\n            <!-- Form -->\n            <form\n              class=\"js-validate needs-validation\"\n              novalidate\n              autocomplete=\"off\"\n              \n              [formGroup]=\"signInemailCreds\"\n            >\n            <!-- (ngSubmit)=\"formloginEmailCreds()\" -->\n              <!-- Form -->\n              <div class=\"mb-4\">\n                <label class=\"form-label\" for=\"signupModalFormLoginEmail\">Your email</label>\n                <input\n                  type=\"email\"\n                  [ngClass]=\"{\n                    'is-invalid': signInemailCreds.get('email')?.errors && emailFormSubmited\n                  }\"\n                  formControlName=\"email\"\n                  class=\"form-control form-control-lg\"\n                  placeholder=\"Enter email\"\n                />\n              </div>\n              <div class=\"mb-4\">\n                <div class=\"d-flex justify-content-between align-items-center\">\n                  <label class=\"form-label\" for=\"signupModalFormLoginPassword\">Password</label>\n                  <a class=\"form-label-link\" style=\"cursor: pointer\" (click)=\"showTemplate = 4; forgotPasswordSent = ''\"\n                    >Forgot Password?</a\n                  >\n                </div>\n                <div class=\"input-group input-group-merge\">\n                  <input\n                    type=\"password\"\n                    class=\"js-toggle-password form-control form-control-lg\"\n                    [ngClass]=\"{\n                      'is-invalid': signInemailCreds.get('password')?.errors && emailFormSubmited\n                    }\"\n                    formControlName=\"password\"\n                    name=\"password\"\n                    placeholder=\"Enter password\"\n                  />\n                </div>\n              </div>\n              <div class=\"mb-4\">\n                <div *ngIf=\"inError\">{{ inError }}</div>\n              </div>\n              <!-- End Form -->\n              <div class=\"d-grid mb-3\">\n                <button type=\"submit\" class=\"btn btn-primary btn-lg\" [disabled]=\"!signInemailCreds.valid || apiLoad\">\n                  Log in\n                  <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" *ngIf=\"apiLoad\"></span>\n                </button>\n              </div>\n              <div class=\"text-center\">\n                <p>\n                  <a style=\"cursor: pointer\" class=\"link\" (click)=\"showTemplate = 1\">Sign in with mobile number</a>\n                </p>\n              </div>\n            </form>\n            <!-- End Form -->\n          </div>\n  \n          <div *ngIf=\"showTemplate == 4\" class=\"flex-grow-1 mx-auto\" style=\"max-width: 28rem\">\n            <!-- Heading -->\n            <div class=\"text-center mb-5 mb-md-7\">\n              <h1 class=\"h2\">Forgot password?</h1>\n            </div>\n            <!-- End Heading -->\n            <!-- Form -->\n            <form\n              class=\"js-validate needs-validation\"\n              novalidate\n              autocomplete=\"off\"\n              \n              [formGroup]=\"signInemailCreds\"\n            >\n            <!-- (ngSubmit)=\"emailForgotPassword()\" -->\n              <!-- Form -->\n              <div class=\"mb-3\">\n                <div class=\"d-flex justify-content-between align-items-center\">\n                  <label class=\"form-label\" for=\"signupModalFormResetPasswordEmail\" tabindex=\"0\">Your email</label>\n                  <a class=\"form-label-link\" style=\"cursor: pointer\" (click)=\"signInemailCreds.reset(); showTemplate = 3\">\n                    <i class=\"bi-chevron-left small ms-1\"></i> Back to Log in\n                  </a>\n                </div>\n                <input\n                  type=\"email\"\n                  [ngClass]=\"{\n                    'is-invalid': signInemailCreds.get('email')?.errors && emailFormSubmited\n                  }\"\n                  formControlName=\"email\"\n                  class=\"form-control form-control-lg\"\n                  placeholder=\"Enter email\"\n                />\n              </div>\n              <div class=\"mb-4\">\n                <div *ngIf=\"inError\">{{ inError }}</div>\n              </div>\n              <!-- End Form -->\n              <div class=\"d-grid mb-3\">\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary btn-lg\"\n                  [disabled]=\"!signInemailCreds.get('email')?.valid || apiLoad\"\n                >\n                  Submit\n                  <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" *ngIf=\"apiLoad\"></span>\n                </button>\n              </div>\n              <div *ngIf=\"forgotPasswordSent\" class=\"alert alert-soft-success\" role=\"alert\">\n                Password link sent to email {{ forgotPasswordSent }}. Tip: check spam/junk folders if not found in inbox.\n              </div>\n            </form>\n            <!-- End Form -->\n          </div>\n          <figure\n            class=\"position-absolute zi-n1 d-none d-lg-flex\"\n            style=\"top: -35rem; left: 40rem; width: 62rem; height: 62rem\"\n          >\n            <svg preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 260 260\">\n              <circle fill=\"#FFFCFB\" opacity=\".7\" cx=\"130\" cy=\"130\" r=\"130\"></circle>\n            </svg>\n          </figure>\n          <figure\n            class=\"position-absolute zi-n1 d-none d-lg-flex\"\n            style=\"top: 15rem; left: 70rem; width: 20rem; height: 20rem\"\n          >\n            <img class=\"img-fluid\" src=\"./assets/svg/components/circled-stripe.svg\" alt=\"Image Description\" />\n          </figure>\n        </div>\n        <!-- End Col -->\n      </div>\n      <!-- End Row -->\n    </div>\n    <div class=\"mb-3\" id=\"recaptcha-container\"></div>\n  </main>\n  ","import { Injectable } from \"@angular/core\";\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n  HttpHandler,\n  HttpEvent,\n  HttpErrorResponse,\n} from \"@angular/common/http\";\nimport { PLATFORM_ID, APP_ID, Inject } from \"@angular/core\";\nimport { isPlatformBrowser } from \"@angular/common\";\nimport { Router } from \"@angular/router\";\nimport { Observable, throwError } from \"rxjs\";\nimport { tap, catchError } from \"rxjs/operators\";\n@Injectable()\nexport class HttpConfigInterceptor implements HttpInterceptor {\n  is_browser: any = false;\n  constructor(private router: Router, @Inject(PLATFORM_ID) private platformId: object) {\n    this.is_browser = isPlatformBrowser(platformId) ? true : false;\n  }\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (this.is_browser) {\n      const token = localStorage.getItem(\"selfi_dashboard_token\");\n      if (token) {\n        request = request.clone({\n          headers: request.headers.set(\"Authorization\", token),\n        });\n      }\n    }\n    if (!request.headers.has(\"file\")) {\n      if (!request.headers.has(\"Content-Type\")) {\n        request = request.clone({\n          headers: request.headers.set(\"Content-Type\", \"application/json\"),\n        });\n      }\n    }\n    request = request.clone({\n      headers: request.headers.set(\"Accept\", \"application/json\"),\n    });\n    request = request.clone({\n      headers: request.headers.set(\"clienttz\", \"Asia/Kolkata\"),\n    });\n    request = request.clone({\n      headers: request.headers.set(\"X-Timezone-Offset\", this.getTimezoneOffset()),\n    });\n    return next.handle(request).pipe(\n      tap((evt) => {\n        if (evt instanceof HttpResponse) {\n        }\n      }),\n      catchError((err: any) => {\n        let errorMessage = \"\";\n        if (err instanceof HttpErrorResponse) {\n          try {\n            console.error(\"HttpErrorResponse\", err);\n            if (err.status == 401) {\n              this.router.navigate([\"login\"]);\n            }\n            if (err.status == 403) {\n              this.showMessage(\"Not allowed\", err.error.detail);\n            }\n            errorMessage = \"\";\n            if (err.error instanceof ErrorEvent) {\n              errorMessage = `Error: ${err.error.message}`;\n            } else {\n              errorMessage = `Error Code: ${err.status}\\nMessage: ${err.message}`;\n            }\n            if (err.status > 499) {\n              // window.alert(errorMessage);\n            }\n          } catch (e) {\n            console.error(\"HttpErrorResponse\", e);\n          }\n        }\n        return throwError(err);\n      })\n    );\n  }\n  private getTimezoneOffset(): string {\n    return String(new Date().getTimezoneOffset());\n  }\n  showMessage(title = \"urbanut\", text = \"Success \") {}\n}\n","var is_localhost = false;\n// var newURL =  window.location.host.split(\":\")[0];\n// if (newURL == 'localhost' || newURL == '127.0.0.1') {\n//   is_localhost = true;\n// }\n\n\nexport const environment = {\n  production: false,\n  baseURL: '',\n  is_localhost:is_localhost,\n  login: \"/api/v1/user/login/\",\n  scanList: \"/api/v1/scan/\",\n  scanGet: \"/api/v1/scan/{id}/\",\n  scanEdit: \"/api/v1/scan/{id}/\", \n  userList: \"/api/v1/user/\",\n  user: \"/api/v1/user/\",\n  userGet: \"/api/v1/user/{id}/\",\n  userEdit: \"/api/v1/user/{id}/\",\n  scanlatlng: \"/api/v1/scan/latlng/\",\n  scanFromIdsList: \"/api/v1/scan/from/ids/\",\n  scanEvents: '/api/v1/scan/events/',\n  scandetail: '/api/v1/scan/{id}/',\n  patientList: \"/api/v1/user/patient/\",\n  patientGet: \"/api/v1/user/patient/{id}/\",\n};\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["env","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","vapidKey","firebaseprod","RouterModule","routes","path","redirectTo","pathMatch","loadChildren","then","m","DashboardModule","AppRoutingModule","forRoot","initialNavigation","imports","i1","exports","AppComponent","constructor","title","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","BrowserModule","setPersistence","AUTH_SETTINGS","provideFirebaseApp","initializeApp","provideAuth","getAuth","getStorage","provideStorage","getFirestore","provideFirestore","ServiceWorkerModule","environment","HTTP_INTERCEPTORS","HttpConfigInterceptor","useDeviceLanguage","USE_DEVICE_LANGUAGE","AppModule","bootstrap","provide","useClass","multi","useValue","appVerificationDisabledForTesting","register","enabled","production","registrationStrategy","declarations","FirebaseAppModule","i2","AuthModule","i3","FirestoreModule","i4","StorageModule","i5","CommonModule","LoginComponent","DashboardParent","DashboardRoutingModule","ReactiveFormsModule","component","children","forChild","ngOnInit","consts","DashboardParent_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","Validators","FormControl","ɵɵproperty","food_r7","ɵɵadvance","ɵɵtextInterpolate2","name","dial_code","ɵɵtextInterpolate","ctx_r5","inError","ɵɵlistener","LoginComponent_div_15_Template_mat_select_valueChange_12_listener","$event","ɵɵrestoreView","_r9","ctx_r8","ɵɵnextContext","ɵɵresetView","country","ɵɵtemplate","LoginComponent_div_15_mat_option_19_Template","LoginComponent_div_15_div_26_Template","LoginComponent_div_15_span_30_Template","LoginComponent_div_15_Template_a_click_33_listener","ctx_r10","signInemailCreds","reset","showTemplate","ctx_r0","signInCreds","countrySearch","countryList","valid","apiLoad","ctx_r13","OTPError","ɵɵtextInterpolate1","ctx_r14","resend","_r11","value","ctx_r16","LoginComponent_div_16_div_11_Template","LoginComponent_div_16_div_12_Template","LoginComponent_div_16_div_13_Template","LoginComponent_div_16_button_14_Template","LoginComponent_div_16_div_15_Template","LoginComponent_div_16_span_19_Template","ctx_r1","otpCreds","phonNumber","ɵɵpureFunction1","_c0","tmp_2_0","get","errors","otpformSubmited","tmp_3_0","length","ctx_r18","LoginComponent_div_17_Template_a_click_13_listener","_r21","ctx_r20","forgotPasswordSent","LoginComponent_div_17_div_18_Template","LoginComponent_div_17_span_22_Template","LoginComponent_div_17_Template_a_click_25_listener","ctx_r22","ctx_r2","tmp_1_0","emailFormSubmited","ctx_r23","ctx_r25","LoginComponent_div_18_Template_a_click_9_listener","_r27","ctx_r26","LoginComponent_div_18_div_14_Template","LoginComponent_div_18_span_18_Template","LoginComponent_div_18_div_19_Template","ctx_r3","fb","is_browser","group","phonno","required","email","pattern","password","otp","minLength","ɵɵdirectiveInject","FormBuilder","LoginComponent_Template","LoginComponent_div_15_Template","LoginComponent_div_16_Template","LoginComponent_div_17_Template","LoginComponent_div_18_Template","ɵɵnamespaceSVG","ɵɵnamespaceHTML","HttpResponse","HttpErrorResponse","PLATFORM_ID","isPlatformBrowser","throwError","tap","catchError","router","platformId","intercept","request","next","token","localStorage","getItem","clone","headers","set","has","getTimezoneOffset","handle","pipe","evt","err","errorMessage","console","error","status","navigate","showMessage","detail","ErrorEvent","message","e","String","Date","text","ɵɵinject","Router","factory","ɵfac","is_localhost","baseURL","login","scanList","scanGet","scanEdit","userList","user","userGet","userEdit","scanlatlng","scanFromIdsList","scanEvents","scandetail","patientList","patientGet","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}